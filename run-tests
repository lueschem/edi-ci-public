#!/bin/bash

set -o nounset
set -o errexit
set -o pipefail

# The script expects a DEVICE_SECRETS environment variable that looks like config/device_secrets_sample.json.

unexpected_exit()
{
    >&2 echo "Error: Unexpected exit (code $?)!"
    trap - EXIT
    revert_sudoers
    exit 1
}

revert_sudoers()
{
    echo "Reverting sudo password removal on ${DEVICE_IP}."
    ssh -F "${SSH_CONFIG}" "${DEVICE_USER}@${DEVICE_IP}" 'sudo rm /etc/sudoers.d/pytest_no_passwd' > /dev/null
}

is_ipv4_address()
{
    local TEST_STRING="${1}"
    [[ ${TEST_STRING} =~ [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3} ]]
}

if [ "$#" -ne 2 ]
then
    >&2 echo "Error: Illegal number of arguments!"
    >&2 echo "Usage: run-tests DEVICE_ID EDI_PROJECT_CONFIGURATION"
    >&2 echo "Example: run-tests 3fb4632b-96b9-475d-ac89-02255bd15b6f edi-pi"
    >&2 echo "Example: run-tests 192.168.1.12 edi-pi"
    exit 1
fi

DEVICE_SECRETS="${DEVICE_SECRETS:=}"
DEVICE_ID=$1
EDI_PROJECT_CONFIGURATION=$2

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
SSH_CONFIG="${SCRIPT_DIR}/config/no_host_key_checking"

if [[ -z "${DEVICE_SECRETS}" ]]
then
    >&2 echo "Error: Unable to retrieve device secrets (DEVICE_SECRETS) from environment!"
    >&2 echo "Hint: export DEVICE_SECRETS=\"\$(cat config/device_secrets_sample.json)\""
    exit 1
fi

EDI_PROJECT_CONFIGURATION_JSON=$(echo "${EDI_PROJECT_CONFIGURATION}" | tr - _)
if ! DEVICE_USER=$(echo "${DEVICE_SECRETS}" | jq -r -e ."${EDI_PROJECT_CONFIGURATION_JSON}".user)
then
    >&2 echo "Error: Unable to retrieve device user for configuration ${EDI_PROJECT_CONFIGURATION_JSON}!"
    exit 1
fi

if ! DEVICE_PASSWORD=$(echo "${DEVICE_SECRETS}" | jq -r -e ."${EDI_PROJECT_CONFIGURATION_JSON}".password)
then
    >&2 echo "Error: Unable to retrieve device password for configuration ${EDI_PROJECT_CONFIGURATION_JSON}!"
    exit 1
fi

if [ "${DEVICE_PASSWORD}" = "INSERT_PASSWORD" ]
then
    >&2 echo "Error: Please adjust the password(s) in your project configuration json."
    exit 1
fi

if ! DEVICE_INTERFACES=$(echo "${DEVICE_SECRETS}" | jq -r -e ."${EDI_PROJECT_CONFIGURATION_JSON}".interface)
then
    >&2 echo "Error: Unable to retrieve device interface(s) for configuration ${EDI_PROJECT_CONFIGURATION_JSON}!"
    exit 1
fi

echo "Retrieving IP address of ${DEVICE_ID}".
DEVICE_IP=""
if is_ipv4_address "${DEVICE_ID}"
then
    DEVICE_IP="${DEVICE_ID}"
else
    IFS=' ' read -r -a INTERFACE_ARRAY <<< "${DEVICE_INTERFACES}"
    for interface in  "${INTERFACE_ARRAY[@]}"
    do
        if DEVICE_IP=$("${SCRIPT_DIR}/mender-api" query "${DEVICE_ID}" "${interface}")
        then
            DEVICE_IP="${DEVICE_IP%/*}"
            break;
        fi
    done
fi

if [[ -z "${DEVICE_IP}" ]]
then
    >&2 echo "Error: Failed to retrieve IP address of ${DEVICE_ID}!"
    exit 1
fi

echo "Testing connection to ${DEVICE_IP}."
ssh -F "${SSH_CONFIG}" "${DEVICE_USER}@${DEVICE_IP}" true

trap unexpected_exit EXIT

echo "Removing sudo password on ${DEVICE_IP}."
# shellcheck disable=SC2087
ssh -F "${SSH_CONFIG}" "${DEVICE_USER}@${DEVICE_IP}" > /dev/null << EOF
    echo "${DEVICE_USER} ALL=(ALL) NOPASSWD: ALL" > pytest_no_passwd
    echo "${DEVICE_PASSWORD}" | sudo -S chown root:root pytest_no_passwd
    echo "${DEVICE_PASSWORD}" | sudo -S mv pytest_no_passwd /etc/sudoers.d/ > /dev/null 2>&1
EOF

echo "Running tests on ${DEVICE_IP}."
py.test-3 --ignore="${EDI_PROJECT_CONFIGURATION}/" --ignore="artifacts/" --ssh-config="${SSH_CONFIG}" --hosts="ssh://${DEVICE_USER}@${DEVICE_IP}"

revert_sudoers
trap - EXIT
